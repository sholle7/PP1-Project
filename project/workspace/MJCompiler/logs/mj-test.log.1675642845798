INFO  01:16:48,971 - Compiling source file: D:\Fakultet\7.semestar\Programski prevodioci 1\Materijali\Projekat\PP1-projekat\workspace\MJCompiler\test\program.mj
INFO  01:16:49,037 - #2 program
INFO  01:16:49,038 - #28 test301
INFO  01:16:49,038 - #3 const
INFO  01:16:49,042 - #28 int
INFO  01:16:49,042 - #28 nula
INFO  01:16:49,046 - #15 =
INFO  01:16:49,046 - #27 0
INFO  01:16:49,047 - #16 ;
INFO  01:16:49,050 - #3 const
INFO  01:16:49,053 - #28 int
INFO  01:16:49,053 - #28 jedan
INFO  01:16:49,053 - #15 =
INFO  01:16:49,054 - #27 1
INFO  01:16:49,054 - #16 ;
INFO  01:16:49,054 - #3 const
INFO  01:16:49,054 - #28 int
INFO  01:16:49,055 - #28 pet
INFO  01:16:49,055 - #15 =
INFO  01:16:49,055 - #27 5
INFO  01:16:49,055 - #16 ;
INFO  01:16:49,056 - #28 int
INFO  01:16:49,056 - #28 niz
INFO  01:16:49,059 - #24 [
INFO  01:16:49,059 - #25 ]
INFO  01:16:49,060 - #17 ,
INFO  01:16:49,063 - #28 niz2
INFO  01:16:49,064 - #24 [
INFO  01:16:49,064 - #25 ]
INFO  01:16:49,064 - #17 ,
INFO  01:16:49,064 - #28 a
INFO  01:16:49,064 - #17 ,
INFO  01:16:49,066 - #28 b
INFO  01:16:49,066 - #16 ;
INFO  01:16:49,066 - #28 char
INFO  01:16:49,070 - #28 nizch
INFO  01:16:49,070 - #24 [
INFO  01:16:49,070 - #25 ]
INFO  01:16:49,070 - #16 ;
INFO  01:16:49,071 - #22 {
INFO  01:16:49,071 - #7 void
INFO  01:16:49,071 - #28 main
INFO  01:16:49,071 - #20 (
INFO  01:16:49,073 - #21 )
INFO  01:16:49,075 - #28 int
INFO  01:16:49,075 - #28 bodovi
INFO  01:16:49,075 - #16 ;
INFO  01:16:49,075 - #28 bool
INFO  01:16:49,075 - #28 bt
INFO  01:16:49,075 - #16 ;
INFO  01:16:49,075 - #22 {
INFO  01:16:49,077 - #28 a
INFO  01:16:49,078 - #15 =
INFO  01:16:49,079 - #27 1
INFO  01:16:49,084 - #16 ;
INFO  01:16:49,091 - #28 niz
INFO  01:16:49,092 - #15 =
INFO  01:16:49,092 - #4 new
INFO  01:16:49,092 - #28 int
INFO  01:16:49,092 - #24 [
INFO  01:16:49,092 - #28 pet
INFO  01:16:49,092 - #25 ]
INFO  01:16:49,093 - #16 ;
INFO  01:16:49,096 - #28 niz
INFO  01:16:49,097 - #24 [
INFO  01:16:49,099 - #27 0
INFO  01:16:49,100 - #25 ]
INFO  01:16:49,100 - #15 =
INFO  01:16:49,100 - #27 1
INFO  01:16:49,100 - #16 ;
INFO  01:16:49,100 - #28 niz
INFO  01:16:49,100 - #24 [
INFO  01:16:49,101 - #27 1
INFO  01:16:49,101 - #25 ]
INFO  01:16:49,101 - #15 =
INFO  01:16:49,101 - #27 2
INFO  01:16:49,101 - #16 ;
INFO  01:16:49,101 - #5 print
INFO  01:16:49,101 - #20 (
INFO  01:16:49,102 - #28 a
INFO  01:16:49,102 - #21 )
INFO  01:16:49,103 - #16 ;
INFO  01:16:49,103 - #23 }
INFO  01:16:49,104 - #23 }
INFO  01:16:49,111 - Program(
  ProgIdent(
   test301
  ) [ProgIdent]
  ProgVarDecl(
    ProgVarDecl(
      ProgConstDecl(
        ProgConstDecl(
          ProgConstDecl(
            NoProgDecl(
            ) [NoProgDecl]
            ConstDecl(
              ConstType(
                Type(
                 int
                ) [Type]
              ) [ConstType]
              ConstNumber(
               nula
               0
              ) [ConstNumber]
              NoConstL(
              ) [NoConstL]
            ) [ConstDecl]
          ) [ProgConstDecl]
          ConstDecl(
            ConstType(
              Type(
               int
              ) [Type]
            ) [ConstType]
            ConstNumber(
             jedan
             1
            ) [ConstNumber]
            NoConstL(
            ) [NoConstL]
          ) [ConstDecl]
        ) [ProgConstDecl]
        ConstDecl(
          ConstType(
            Type(
             int
            ) [Type]
          ) [ConstType]
          ConstNumber(
           pet
           5
          ) [ConstNumber]
          NoConstL(
          ) [NoConstL]
        ) [ConstDecl]
      ) [ProgConstDecl]
      VarDecl(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        VarDeclListMultiple(
          VarFromMultiplePart(
           niz
            ListSquareBracketsMultiple(
            ) [ListSquareBracketsMultiple]
          ) [VarFromMultiplePart]
          VarDeclListMultiple(
            VarFromMultiplePart(
             niz2
              ListSquareBracketsMultiple(
              ) [ListSquareBracketsMultiple]
            ) [VarFromMultiplePart]
            VarDeclListMultiple(
              VarFromMultiplePart(
               a
                ListSquareBracketsSingle(
                ) [ListSquareBracketsSingle]
              ) [VarFromMultiplePart]
              VarDeclListSingle(
                VarDeclSing(
                 b
                  ListSquareBracketsSingle(
                  ) [ListSquareBracketsSingle]
                ) [VarDeclSing]
              ) [VarDeclListSingle]
            ) [VarDeclListMultiple]
          ) [VarDeclListMultiple]
        ) [VarDeclListMultiple]
      ) [VarDecl]
    ) [ProgVarDecl]
    VarDecl(
      VarType(
        Type(
         char
        ) [Type]
      ) [VarType]
      VarDeclListSingle(
        VarDeclSing(
         nizch
          ListSquareBracketsMultiple(
          ) [ListSquareBracketsMultiple]
        ) [VarDeclSing]
      ) [VarDeclListSingle]
    ) [VarDecl]
  ) [ProgVarDecl]
  MethodDeclList(
    MethodDecl(
      MethIdent(
       main
      ) [MethIdent]
      FormPars(
      ) [FormPars]
      VarDeclL(
        VarDecl(
          VarType(
            Type(
             int
            ) [Type]
          ) [VarType]
          VarDeclListSingle(
            VarDeclSing(
             bodovi
              ListSquareBracketsSingle(
              ) [ListSquareBracketsSingle]
            ) [VarDeclSing]
          ) [VarDeclListSingle]
        ) [VarDecl]
        VarDeclL(
          VarDecl(
            VarType(
              Type(
               bool
              ) [Type]
            ) [VarType]
            VarDeclListSingle(
              VarDeclSing(
               bt
                ListSquareBracketsSingle(
                ) [ListSquareBracketsSingle]
              ) [VarDeclSing]
            ) [VarDeclListSingle]
          ) [VarDecl]
          NoVarDeclL(
          ) [NoVarDeclL]
        ) [VarDeclL]
      ) [VarDeclL]
      StatementL(
        StatementL(
          StatementL(
            StatementL(
              StatementL(
                NoStatementsL(
                ) [NoStatementsL]
                DesigStatement(
                  AssignDesignatorSt(
                    DesignatorSingle(
                     a
                    ) [DesignatorSingle]
                    Assignop(
                    ) [Assignop]
                    Expr(
                      SingleExpr(
                        Term(
                          SingleTerm(
                            Factor(
                              FactorNoMinus(
                              ) [FactorNoMinus]
                              FactorNum(
                               1
                              ) [FactorNum]
                            ) [Factor]
                          ) [SingleTerm]
                        ) [Term]
                      ) [SingleExpr]
                    ) [Expr]
                  ) [AssignDesignatorSt]
                ) [DesigStatement]
              ) [StatementL]
              DesigStatement(
                AssignDesignatorSt(
                  DesignatorSingle(
                   niz
                  ) [DesignatorSingle]
                  Assignop(
                  ) [Assignop]
                  Expr(
                    SingleExpr(
                      Term(
                        SingleTerm(
                          Factor(
                            FactorNoMinus(
                            ) [FactorNoMinus]
                            FactorNew(
                              FactorNewParam(
                                Type(
                                 int
                                ) [Type]
                                Expr(
                                  SingleExpr(
                                    Term(
                                      SingleTerm(
                                        Factor(
                                          FactorNoMinus(
                                          ) [FactorNoMinus]
                                          FactorD(
                                            DesignatorSingle(
                                             pet
                                            ) [DesignatorSingle]
                                          ) [FactorD]
                                        ) [Factor]
                                      ) [SingleTerm]
                                    ) [Term]
                                  ) [SingleExpr]
                                ) [Expr]
                              ) [FactorNewParam]
                            ) [FactorNew]
                          ) [Factor]
                        ) [SingleTerm]
                      ) [Term]
                    ) [SingleExpr]
                  ) [Expr]
                ) [AssignDesignatorSt]
              ) [DesigStatement]
            ) [StatementL]
            DesigStatement(
              AssignDesignatorSt(
                DesignatorArray(
                  DesignatorArrayIdent(
                   niz
                  ) [DesignatorArrayIdent]
                  Expr(
                    SingleExpr(
                      Term(
                        SingleTerm(
                          Factor(
                            FactorNoMinus(
                            ) [FactorNoMinus]
                            FactorNum(
                             0
                            ) [FactorNum]
                          ) [Factor]
                        ) [SingleTerm]
                      ) [Term]
                    ) [SingleExpr]
                  ) [Expr]
                ) [DesignatorArray]
                Assignop(
                ) [Assignop]
                Expr(
                  SingleExpr(
                    Term(
                      SingleTerm(
                        Factor(
                          FactorNoMinus(
                          ) [FactorNoMinus]
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [Factor]
                      ) [SingleTerm]
                    ) [Term]
                  ) [SingleExpr]
                ) [Expr]
              ) [AssignDesignatorSt]
            ) [DesigStatement]
          ) [StatementL]
          DesigStatement(
            AssignDesignatorSt(
              DesignatorArray(
                DesignatorArrayIdent(
                 niz
                ) [DesignatorArrayIdent]
                Expr(
                  SingleExpr(
                    Term(
                      SingleTerm(
                        Factor(
                          FactorNoMinus(
                          ) [FactorNoMinus]
                          FactorNum(
                           1
                          ) [FactorNum]
                        ) [Factor]
                      ) [SingleTerm]
                    ) [Term]
                  ) [SingleExpr]
                ) [Expr]
              ) [DesignatorArray]
              Assignop(
              ) [Assignop]
              Expr(
                SingleExpr(
                  Term(
                    SingleTerm(
                      Factor(
                        FactorNoMinus(
                        ) [FactorNoMinus]
                        FactorNum(
                         2
                        ) [FactorNum]
                      ) [Factor]
                    ) [SingleTerm]
                  ) [Term]
                ) [SingleExpr]
              ) [Expr]
            ) [AssignDesignatorSt]
          ) [DesigStatement]
        ) [StatementL]
        PrintStatement(
          Expr(
            SingleExpr(
              Term(
                SingleTerm(
                  Factor(
                    FactorNoMinus(
                    ) [FactorNoMinus]
                    FactorD(
                      DesignatorSingle(
                       a
                      ) [DesignatorSingle]
                    ) [FactorD]
                  ) [Factor]
                ) [SingleTerm]
              ) [Term]
            ) [SingleExpr]
          ) [Expr]
          NoExpArg(
          ) [NoExpArg]
        ) [PrintStatement]
      ) [StatementL]
    ) [MethodDecl]
  ) [MethodDeclList]
) [Program]
INFO  01:16:49,112 - ======================================================================
INFO  01:16:49,136 - Deklarisana je konstanta: nula na liniji 5
INFO  01:16:49,136 - Deklarisana je konstanta: jedan na liniji 6
INFO  01:16:49,136 - Deklarisana je konstanta: pet na liniji 7
INFO  01:16:49,136 - Deklarisan je globalni niz: niz na liniji 9
INFO  01:16:49,136 - Deklarisan je globalni niz: niz2 na liniji 9
INFO  01:16:49,137 - Deklarisana je globalna promenljiva: a na liniji 9
INFO  01:16:49,137 - Deklarisana je globalna promenljiva: b na liniji 9
INFO  01:16:49,137 - Deklarisan je globalni niz: nizch na liniji 10
INFO  01:16:49,137 - Deklarisana je lokalna promenljiva: bodovi na liniji 14
INFO  01:16:49,137 - Deklarisana je lokalna promenljiva: bt na liniji 15
INFO  01:16:49,145 - Parsiranje uspesno zavrseno!
